import java.io.File;
import java.io.IOException;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;

import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.NodeList;
import org.xml.sax.SAXException;


public class OrderXML {

	public static void main(String[] args) {
		
		NodeList goods = readShopping();
		int count = 0;
		float total = 0.0f;
		for(int i=0; i<goods.getLength(); i++){
			Element good = (Element) goods.item(i);
			Element name = (Element) good.getElementsByTagName("name").item(0);
			int number = Integer.parseInt(good.getElementsByTagName("number").item(0).getTextContent());
			float price = Float.parseFloat(good.getElementsByTagName("price").item(0).getTextContent())*number;
			System.out.println("----------------");
			System.out.println("name="+name.getTextContent());
			System.out.println("----------------");
			System.out.println("number="+number);
			count += number;
			System.out.println("----------------");
			System.out.println("count="+count);
			total += price;
			System.out.println("----------------");
			System.out.println("total="+total);
		}
		
		createOrderXML(count, total);
	}
	
//	获得shopping.xml中的所有goods节点
	private static NodeList readShopping(){
		NodeList list = null;
		
		DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
		DocumentBuilder builder;
		Document document;
		Element root;
		
		try {
			builder = factory.newDocumentBuilder();
			document = builder.parse(new File("shopping.xml"));
			root = document.getDocumentElement();
			list = root.getElementsByTagName("goods");
		} catch (ParserConfigurationException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (SAXException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		return list;
	}

// 	生成订单XML
	private static void createOrderXML(int total, float sums) {		
		
		try {
			DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
			DocumentBuilder builder = factory.newDocumentBuilder();
			Document document = builder.newDocument();
			Element root = document.createElement("order");
			
			Element cTotal = document.createElement("total");
			cTotal.setTextContent(total+"");
			Element cSums = document.createElement("sums");
			cSums.setTextContent(sums+"");
			
			root.appendChild(cTotal);
			root.appendChild(cSums);
		} catch (ParserConfigurationException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
}
